항상 문서의 첫 번째 줄에 문서 유형을 선언
<!DOCTYPE html>
-> HTML의 올바른 문서 유형

소문자 요소 이름 사용
HTML에서는 요소 이름에 대문자와 소문자를 섞어 사용할 수 있습니다
그러나, 다음과 같은 이유로 소문자 요소 이름을 사용하는 것이 좋습니다
    1. 대문자와 소문자 이름을 섞으면 보기 좋지 않다
    2. 개발자는 일반적으로 소문자 이름을 사용한다
    3. 소문자가 더 깔끔해 보인다
    4. 소문자는 입력하기 쉽다


모든 HTML 요소 닫기
HTML에서는 모든 요소(예를 들어 <p>요소)를 닫을 필요는 없습니다
하지만 다음과 같이 모든 HTML 요소를 닫는 것을 강력히 권장합니다

소문자 속성 이름 사용
HTML에서는 속성 이름에 대문자와 소문자를 섞어 사용할 수 있습니다
하지만, 소문자 요소 이름 사용과 같은 이유로 소문자를 권장합니다

항상 속성 값을 인용하세요
HTML에서는 따옴표 없이 속성 값을 입력할 수 있습니다.
그러나 다음과 같은 이유로 속성 값을 인용하는 것이 좋습니다.
    1. 개발자는 일반적으로 속성 값을 인용합니다.
    2. 따옴표로 묶은 값은 읽기가 더 쉽습니다.
    3. 값에 공백이 포함된 경우 따옴표를 사용해야 합니다.

이미지에 대해 항상 alt, width, height를 지정하세요
항상 alt이미지에 대한 속성을 지정하세요.
    이 속성은 어떤 이유로 이미지를 표시할 수 없는 경우 중요합니다.
또한, 항상 이미지의 width, height를 정의하세요. 
    이렇게 하면 브라우저가 로딩하기 전에 이미지를 위한 공간을 예약할 수 있기 때문에 깜빡임이 줄어듭니다.

공백과 등호
    HTML은 등호 주위에 공백을 허용합니다. 하지만 공백이 없는 것이 읽기 쉽고 엔티티를 더 잘 그룹화합니다.

긴 코드 줄을 피하세요
    HTML 편집기를 사용할 때, HTML 코드를 읽기 위해 오른쪽이나 왼쪽으로 스크롤하는 것은 편리하지 않습니다.
    너무 긴 코드 줄은 피하세요.

빈 줄과 들여쓰기
    이유 없이 빈 줄, 공백 또는 들여쓰기를 추가하지 마세요.
    가독성을 위해 크거나 논리적인 코드 블록을 구분하기 위해 빈 줄을 추가합니다.
    가독성을 위해 들여쓰기를 두 칸 더 추가하세요. 탭 키는 사용하지 마세요.

<title> 요소를 절대 건너뛰지 마세요
    해당 <title>요소는 HTML에 필수입니다.
    페이지 제목의 내용은 검색 엔진 최적화(SEO)에 매우 중요합니다! 페이지 제목은 검색 엔진 알고리즘이 검색 결과에 페이지를 나열할 때 순서를 결정하는 데 사용됩니다.
        1. 브라우저 툴바의 제목을 정의합니다
        2. 즐겨찾기에 추가되면 페이지의 제목을 제공합니다.
        3. 검색 엔진 결과에 페이지의 제목을 표시합니다.
    따라서 제목을 최대한 정확하고 의미 있게 만들어 보세요.

<html>과 <body>를 생략하시겠습니까?
    HTML 페이지는 <html>, <body> 태그 없이도 유효성을 검사합니다.
    하지만 항상 <html>및 <body>태그를 추가하는 것을 강력히 권장합니다!
    <body>를 생략하면 오래된 브라우저에서 오류가 발생할 수 있습니다.
    <html>, <body>을 생략하면 DOM 및 XML 소프트웨어가 작동 중단될 수도 있습니다.

<head>를 생략하시나요?
    HTML <head> 태그도 생략할 수 있습니다.
    브라우저는 <body> 이전의 모든 요소를 ​​기본 <head> 요소에 추가합니다.

빈 HTML 요소를 닫으시겠습니까?
    HTML에서는 빈 요소를 닫는 것은 선택 사항입니다.
허용됨) <meta charset="utf-8">
또한 허용됨) <meta charset="utf-8"/>
XML/XHTML 소프트웨어가 페이지에 액세스할 것으로 예상하는 경우 닫는 슬래시(/)를 유지하세요. 
XML과 XHTML에서는 필수이기 때문입니다.

lang 속성을 추가합니다
    웹 페이지의 언어를 선언하려면 <html>태그 내부에 lang 속성을 항상 포함해야 합니다.
    이는 검색 엔진과 브라우저를 지원하기 위한 것입니다.

메타 데이터
    적절한 해석과 올바른 검색 엔진 인덱싱을 보장하려면, 언어와 문자 인코딩을 모두 HTML 문서에서 <meta charset="charset">를 가능한 한 빨리 정의해야 합니다.  

뷰포트 설정
    뷰포트는 웹 페이지에서 사용자가 볼 수 있는 영역입니다. 기기에 따라 다릅니다. 모바일 폰에서는 컴퓨터 화면보다 더 작습니다.
    모든 웹 페이지에 다음 <meta>요소를 포함해야 합니다 .
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    이는 브라우저에 페이지의 크기와 배율을 제어하는 ​​방법에 대한 지침을 제공합니다.
    해당 width=device-width부분은 페이지의 너비를 장치의 화면 너비에 맞게 설정합니다(장치에 따라 다름).
    해당 initial-scale=1.0부분은 브라우저가 페이지를 처음 로드할 때의 초기 확대/축소 레벨을 설정합니다.
    다음은 뷰포트 메타 태그가 없는 웹 페이지와 뷰포트 메타 태그가 있는 동일한 웹 페이지의 예입니다.

HTML 주석
    짧은 주석은 다음과 같이 한 줄로 작성해야 합니다.
    <!-- This is a comment -->
    여러 줄에 걸친 주석은 다음과 같이 작성해야 합니다.
    <!--
      This is a long comment example. This is a long comment example.
      This is a long comment example. This is a long comment example.
    -->

스타일 시트 사용
    스타일 시트에 연결하려면 간단한 구문을 사용하세요(type속성은 반드시 필요하지 않습니다):
    <link rel="stylesheet" href="styles.css">

    짧은 CSS 규칙은 다음과 같이 압축하여 작성할 수 있습니다.
    p.intro {font-family:Verdana; font-size:16em;}

    긴 CSS 규칙은 여러 줄에 걸쳐 작성해야 합니다.
    body {
      background-color: lightgrey;
      font-family: "Arial Black", Helvetica, sans-serif;
      font-size: 16em;
      color: black;
    }
    선택자와 같은 줄에 여는 괄호를 놓으세요.
    여는 괄호 앞에 공백을 하나 두세요.
    들여쓰기에 공백 두 개를 사용하세요
    마지막을 포함하여 각 속성-값 쌍 뒤에 세미콜론을 사용하십시오.
    값에 공백이 포함된 경우에만 값을 따옴표로 묶으세요.
    공백 없이 새 줄에 닫는 괄호를 넣습니다.

HTML에 JavaScript 로딩
    외부 스크립트를 로드하기 위해 간단한 구문을 사용합니다( type속성은 반드시 필요하지 않습니다):
    <script src="myscript.js">

javaScript로 HTML 요소에 접근하기
"정리되지 않은" HTML 코드를 사용하면 JavaScript 오류가 발생할 수 있습니다.

다음 두 JavaScript 명령문은 서로 다른 결과를 생성합니다.
예)
    getElementById("Demo").innerHTML = "Hello";
    getElementById("demo").innerHTML = "Hello";

소문자 파일 이름 사용
    일부 웹 서버(Apache, Unix)는 파일 이름의 대소문자를 구분합니다. "london.jpg"는 "London.jpg"로 액세스할 수 없습니다.
    다른 웹 서버(Microsoft, IIS)는 대소문자를 구분하지 않습니다. "london.jpg"는 "London.jpg"로 액세스할 수 있습니다.
    대문자와 소문자를 섞어서 사용하는 경우 이 점을 주의해야 합니다.
    대소문자를 구분하지 않는 서버에서 대소문자를 구분하는 서버로 바꾸면 아무리 작은 오류라도 웹이 손상됩니다!
    이러한 문제를 피하려면 항상 소문자 파일 이름을 사용하세요!

파일 확장자
    HTML 파일은 .html 확장자를 가져야 합니다 (.htm 도 허용됨).
    CSS 파일은 .css 확장자를 가져야 합니다.
    JavaScript 파일은 .js 확장자를 가져야 합니다.

.htm과 .html의 차이점은 무엇입니까?
    .htm과 .html 파일 확장자 사이에는 차이가 없습니다!
    둘 다 모든 웹 브라우저와 웹 서버에서 HTML로 처리됩니다.

기본 파일 이름
    URL 끝에 파일 이름을 지정하지 않으면(예: "https://www.w3schools.com/") 서버는 "index.html", "index.htm", "default.html", "default.htm"과 같은 기본 파일 이름만 추가합니다.
    서버가 기본 파일 이름으로 "index.html"만 구성된 경우 파일 이름은 "default.html"이 아닌 "index.html"이어야 합니다.
    그러나 서버는 두 개 이상의 기본 파일 이름으로 구성될 수 있습니다. 일반적으로 원하는 만큼 기본 파일 이름을 설정할 수 있습니다.